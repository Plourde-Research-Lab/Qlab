
SoftwareDevelopmentMode     0 #In software developement mode no instruments are really used

# InstrumentNames is redundent and is only used for error checking.  Instrumentnames
# should enumerate the name assigned to each instrument being used.  The names should be descriptive
# of the instruments function in this particular experiment for example 'flux_bias' or 
# 'ReadoutPulseAWG'.
# InstrumentNames                         {'AWG';'flux_bias';'counter'}

# number of steps in experiment loop
numSteps                  	10  #number of steps between initial and final values
expType                     SwitchingCurve #[SwitchingCurve SQUIDModulation]

#######################################################################
#######################################################################
#######################################################################

# parameters for readout pulse
ExpParams.ReadoutPulse.deviceTag           AWG # which device do these parameters pertain to?
ExpParams.ReadoutPulse.deviceName          AWG # which device do these parameters pertain to?
ExpParams.ReadoutPulse.pulseCH      	   1 #output channel for pulse device 
ExpParams.ReadoutPulse.time.start          [550;5;50;5;15;20;2e4;50;2e3;1e2]*1e-9 #in s
ExpParams.ReadoutPulse.time.end            [550;5;50;5;15;20;2e4;50;2e3;1e2]*1e-9 #in s
ExpParams.ReadoutPulse.amp.start           [0;0;.15;.15;.75;.75;.15;.15;-5e-3;0] #in V
ExpParams.ReadoutPulse.amp.end             [0;0;.15;.15;.75;.75;.15;.15;-5e-3;0] #in V
ExpParams.ReadoutPulse.ScaleFactor.start   1 #dimensionless
ExpParams.ReadoutPulse.ScaleFactor.end     1 #dimensionless
ExpParams.ReadoutPulse.offset.start        -0.001 #in V
ExpParams.ReadoutPulse.offset.end          -0.001 #in V

# parameters for cooling pulse
ExpParams.MicrowavePulse.deviceTag           AWG # which device do these parameters pertain to?
ExpParams.MicrowavePulse.deviceName          AWG # which device do these parameters pertain to?
ExpParams.MicrowavePulse.pulseCH      	   2 #output channel for pulse device 
ExpParams.MicrowavePulse.time.start          [75;10;100;10;10]*1e-9 #in s
ExpParams.MicrowavePulse.time.end            [75;10;100;10;10]*1e-9 #in s
ExpParams.MicrowavePulse.amp.start           [0;0;1;1;0] #in V
ExpParams.MicrowavePulse.amp.end             [0;0;1;1;0] #in V
ExpParams.MicrowavePulse.ScaleFactor.start   1 #dimensionless
ExpParams.MicrowavePulse.ScaleFactor.end     1 #dimensionless
ExpParams.MicrowavePulse.offset.start        0 #in V
ExpParams.MicrowavePulse.offset.end          0 #in V
ExpParams.MicrowavePulse.sinusoid            0 # [0 1] if true the envelope pulse is multiplied by a sine
ExpParams.MicrowavePulse.frequency.start	   10e6 # phase frequency in Hz
ExpParams.MicrowavePulse.frequency.end	   10e6 # phase frequency in Hz

# parameters for phase qubit flux pulse
ExpParams.FluxPulse.deviceTag           AWG # which device do these parameters pertain to?
ExpParams.FluxPulse.deviceName          AWG # which device do these parameters pertain to?
ExpParams.FluxPulse.pulseCH      	    3 #output channel for pulse device 
ExpParams.FluxPulse.time.start          [10;300;10;100;1/1.2;0;1/1.2;100;10;]*1e-9 #in s
ExpParams.FluxPulse.time.end            [10;300;10;100;1/1.2;0;1/1.2;100;10;]*1e-9 #in s
ExpParams.FluxPulse.amp.start           [0;0.05;0.05;0.1;0.1;0.11;0.11;0.1;0;] #in V
ExpParams.FluxPulse.amp.end             [0;0.05;0.05;0.1;0.1;0.11;0.11;0.1;0;] #in V
ExpParams.FluxPulse.ScaleFactor.start   1 #dimensionless
ExpParams.FluxPulse.ScaleFactor.end     1 #dimensionless
ExpParams.FluxPulse.offset.start        0 #in V
ExpParams.FluxPulse.offset.end          0 #in V
ExpParams.FluxPulse.sinusoid            0 # [0 1] if true the envelope pulse is multiplied by a sine

#also parameters for spectroscopy pulse, etc. on ch. 3, 4, etc.

#######################################################################

# Now we give the flux bias paramters
#ExpParams.sZ_bias.deviceTag	           sZ_bias # which device will supply this bias
#ExpParams.sZ_bias.deviceName           flux_bias # which device will supply this bias
#ExpParams.sZ_bias.channel		   1 # DC bias channel
#ExpParams.sZ_bias.min			   -0.1 # in A
#ExpParams.sZ_bias.max			   0.1  # in A

#ExpParams.bobbin_bias.deviceTag	           bobbin_bias # which device will supply this bias
#ExpParams.bobbin_bias.deviceName           flux_bias # which device will supply this bias
#ExpParams.bobbin_bias.channel		   2 # DC bias channel
#ExpParams.bobbin_bias.min	 	   2-0.5 # in A
#ExpParams.bobbin_bias.max	   	   2+0.5 # in A

#######################################################################

ExpParams.CWSource.deviceTag		CWSource
ExpParams.CWSource.deviceName		muwave
ExpParams.CWSource.frequency.min	3 # min frequency in GHz
ExpParams.CWSource.frequency.max	4 # max frequency in GHz
ExpParams.CWSource.power.min		5 # min frequency in dBm
ExpParams.CWSource.power.max		5 # max frequency in dBm
ExpParams.CWSource.power.scale		'linear' # [linear log]

#######################################################################
#######################  Init Params ##################################
#######################################################################

InitParams.AWG.numWaveforms             500 #number of times the waveform gets repeated
InitParams.AWG.RefOsc                	External #reference oscillator can be 'External' or 'Internal'
InitParams.AWG.samplingRate             1.2e9 #in Samp/sec
InitParams.AWG.RunMode                  Sequence # [Sequence Continuous]
InitParams.AWG.LoopCount                500 # number of times to execute the waveform sequence
InitParams.AWG.WaveformDuration         0.25e-4 # in s

InitParams.flux_bias               [] # currently no parameters are needed 
                                     # for the flux bias, maybe cal data could
                                     # be stored here?

InitParams.counter.device              counter # which device do these parameters pertain to?
InitParams.counter.CH                       1 #input channle for coutner
InitParams.counter.MeasMode             	   SampleAndHold #counter config 'SampleAndHold' or 'TimeOfFlight'
InitParams.counter.Coupling		   DC # AC or DC
InitParams.counter.Attenuation		   1 # 1 or 10 times attenutation
InitParams.counter.Impedence		   50 # [50 ???] Ohm impedence
InitParams.counter.TriggerLevel		   0.04 # trigger level in V
InitParams.counter.RefOsc		   Int # ['Ext' 'Int']

Initparams.muwave			   []

#######################################################################
########################## Instr Params ###############################
#######################################################################

# Instrument paramters
InstrParams.AWG.deviceName     		{'tek5014'} #[tek5014 DACII]
InstrParams.AWG.tag                 {'AWG'}
InstrParams.AWG.VISA_string           	TCPIP::128.33.89.4::4000::SOCKET #Tek VISA string
InstrParams.AWG.driver                	2 #[1 2] 1 - tektronix IVI driver (depricated) 2- GPIB commands over ethernet

#InstrParams.flux_bias.deviceName 	{'BBN_DCBias'} # ['BBN_DCBias' 'Keithly220']
#InstrParams.flux_bias.SerialPort        {'COM3'} # BBN_DCBias COM port

#InstrParams.flux_bias.deviceName        {'Agilent33220A';'Agilent33220A'}; # ['BBN_DCBias' 'Keithly220' 'Agilent33220A']
#InstrParams.flux_bias.tag               {'bobbin_bias';'sZ_bias'}
#InstrParams.flux_bias.Address       {6;7} # gpib address

#InstrParams.flux_bias.deviceName        {'Agilent33220A'}; # ['BBN_DCBias' 'Keithly220' 'Agilent33220A']
#InstrParams.flux_bias.tag               {'sZ_bias'}
#InstrParams.flux_bias.Address           {7} # gpib address

InstrParams.counter.deviceName        	{'Agilent53131A'} #[Agilent53131A]
InstrParams.counter.tag                 {'counter'}
InstrParams.counter.Address     	{4} #counter GPIB address

InstrParams.muwave.deviceName           {'HP8673B'} #[HP8673B]
InstrParams.muwave.tag                  {'CWSource'}
InstrParams.muwave.Address          {19}

# The gpib substructure contains parameters used by the generic GPIB class
InstrParams.gpib.vendor              	ni #GPIB board vendor
InstrParams.gpib.boardindex         	0  #GPIB board index
